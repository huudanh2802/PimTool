// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PIMToolCodeBase.Database;

namespace Pim_Tool.Migrations
{
    [DbContext(typeof(PimContext))]
    [Migration("20220604040457_allowemptyprojectemployee")]
    partial class allowemptyprojectemployee
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PIMToolCodeBase.Domain.Entities.Employee", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(19,0)")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("BIRTH_DAY");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LAST_NAME");

                    b.Property<decimal>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,0)")
                        .HasDefaultValue(1m)
                        .HasColumnName("VERSION");

                    b.Property<string>("Visa")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .HasColumnName("VISA");

                    b.HasKey("Id");

                    b.ToTable("EMPLOYEE");

                    b.HasData(
                        new
                        {
                            Id = 1m,
                            BirthDate = new DateTime(2022, 6, 4, 11, 4, 57, 493, DateTimeKind.Local).AddTicks(7242),
                            FirstName = "FirstName1",
                            LastName = "LastName1",
                            Version = 0m,
                            Visa = "AB1"
                        },
                        new
                        {
                            Id = 2m,
                            BirthDate = new DateTime(2022, 6, 4, 11, 4, 57, 493, DateTimeKind.Local).AddTicks(7525),
                            FirstName = "FirstName2",
                            LastName = "LastName2",
                            Version = 0m,
                            Visa = "AB2"
                        },
                        new
                        {
                            Id = 3m,
                            BirthDate = new DateTime(2022, 6, 4, 11, 4, 57, 493, DateTimeKind.Local).AddTicks(7531),
                            FirstName = "FirstName3",
                            LastName = "LastName3",
                            Version = 0m,
                            Visa = "AB3"
                        },
                        new
                        {
                            Id = 4m,
                            BirthDate = new DateTime(2022, 6, 4, 11, 4, 57, 493, DateTimeKind.Local).AddTicks(7534),
                            FirstName = "FirstName4",
                            LastName = "LastName4",
                            Version = 0m,
                            Visa = "AB4"
                        },
                        new
                        {
                            Id = 5m,
                            BirthDate = new DateTime(2022, 6, 4, 11, 4, 57, 493, DateTimeKind.Local).AddTicks(7537),
                            FirstName = "FirstName5",
                            LastName = "LastName5",
                            Version = 0m,
                            Visa = "AB5"
                        },
                        new
                        {
                            Id = 6m,
                            BirthDate = new DateTime(2022, 6, 4, 11, 4, 57, 493, DateTimeKind.Local).AddTicks(7542),
                            FirstName = "FirstName6",
                            LastName = "LastName6",
                            Version = 0m,
                            Visa = "AB6"
                        },
                        new
                        {
                            Id = 7m,
                            BirthDate = new DateTime(2022, 6, 4, 11, 4, 57, 493, DateTimeKind.Local).AddTicks(7545),
                            FirstName = "FirstName7",
                            LastName = "LastName7",
                            Version = 0m,
                            Visa = "AB7"
                        },
                        new
                        {
                            Id = 8m,
                            BirthDate = new DateTime(2022, 6, 4, 11, 4, 57, 493, DateTimeKind.Local).AddTicks(7548),
                            FirstName = "FirstName8",
                            LastName = "LastName8",
                            Version = 0m,
                            Visa = "AB8"
                        },
                        new
                        {
                            Id = 9m,
                            BirthDate = new DateTime(2022, 6, 4, 11, 4, 57, 493, DateTimeKind.Local).AddTicks(7551),
                            FirstName = "FirstName9",
                            LastName = "LastName9",
                            Version = 0m,
                            Visa = "AB9"
                        });
                });

            modelBuilder.Entity("PIMToolCodeBase.Domain.Entities.Group", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(19,0)")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("GroupLeaderId")
                        .HasColumnType("decimal(19,0)")
                        .HasColumnName("GROUP_LEADER_ID");

                    b.Property<decimal>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,0)")
                        .HasDefaultValue(1m)
                        .HasColumnName("VERSION");

                    b.HasKey("Id");

                    b.HasIndex("GroupLeaderId")
                        .IsUnique();

                    b.ToTable("GROUP");

                    b.HasData(
                        new
                        {
                            Id = 1m,
                            GroupLeaderId = 1m,
                            Version = 0m
                        },
                        new
                        {
                            Id = 2m,
                            GroupLeaderId = 2m,
                            Version = 0m
                        });
                });

            modelBuilder.Entity("PIMToolCodeBase.Domain.Entities.Project", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(19,0)")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CUSTOMER");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("END_DATE");

                    b.Property<decimal>("GroupId")
                        .HasColumnType("decimal(19,0)")
                        .HasColumnName("GROUP_ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NAME");

                    b.Property<decimal>("ProjectNumber")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("PROJECT_NUMBER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("START_DATE");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(3)")
                        .HasDefaultValue("NEW")
                        .HasColumnName("STATUS");

                    b.Property<decimal>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,0)")
                        .HasDefaultValue(1m)
                        .HasColumnName("VERSION");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectNumber")
                        .IsUnique();

                    b.ToTable("PROJECT");

                    b.HasCheckConstraint("CK_Project_Status", "STATUS='NEW'OR STATUS='PLA'OR STATUS='INP'OR STATUS='FIN'");

                    b.HasData(
                        new
                        {
                            Id = 1m,
                            Customer = "Customer1",
                            GroupId = 1m,
                            Name = "Test1",
                            ProjectNumber = 1m,
                            StartDate = new DateTime(2022, 6, 4, 11, 4, 57, 486, DateTimeKind.Local).AddTicks(5872),
                            Status = "PLA",
                            Version = 0m
                        },
                        new
                        {
                            Id = 2m,
                            Customer = "Customer2",
                            GroupId = 1m,
                            Name = "Test2",
                            ProjectNumber = 2m,
                            StartDate = new DateTime(2022, 6, 4, 11, 4, 57, 488, DateTimeKind.Local).AddTicks(5765),
                            Status = "PLA",
                            Version = 0m
                        },
                        new
                        {
                            Id = 3m,
                            Customer = "Customer3",
                            GroupId = 1m,
                            Name = "Test3",
                            ProjectNumber = 3m,
                            StartDate = new DateTime(2022, 6, 4, 11, 4, 57, 488, DateTimeKind.Local).AddTicks(5780),
                            Status = "PLA",
                            Version = 0m
                        },
                        new
                        {
                            Id = 4m,
                            Customer = "Customer4",
                            GroupId = 1m,
                            Name = "Test4",
                            ProjectNumber = 4m,
                            StartDate = new DateTime(2022, 6, 4, 11, 4, 57, 488, DateTimeKind.Local).AddTicks(5784),
                            Status = "PLA",
                            Version = 0m
                        },
                        new
                        {
                            Id = 5m,
                            Customer = "Customer5",
                            GroupId = 1m,
                            Name = "Test5",
                            ProjectNumber = 5m,
                            StartDate = new DateTime(2022, 6, 4, 11, 4, 57, 488, DateTimeKind.Local).AddTicks(5786),
                            Status = "PLA",
                            Version = 0m
                        },
                        new
                        {
                            Id = 6m,
                            Customer = "Customer6",
                            GroupId = 1m,
                            Name = "Test6",
                            ProjectNumber = 6m,
                            StartDate = new DateTime(2022, 6, 4, 11, 4, 57, 488, DateTimeKind.Local).AddTicks(5791),
                            Status = "PLA",
                            Version = 0m
                        },
                        new
                        {
                            Id = 7m,
                            Customer = "Customer7",
                            GroupId = 1m,
                            Name = "Test7",
                            ProjectNumber = 7m,
                            StartDate = new DateTime(2022, 6, 4, 11, 4, 57, 488, DateTimeKind.Local).AddTicks(5793),
                            Status = "PLA",
                            Version = 0m
                        },
                        new
                        {
                            Id = 8m,
                            Customer = "Customer8",
                            GroupId = 1m,
                            Name = "Test8",
                            ProjectNumber = 8m,
                            StartDate = new DateTime(2022, 6, 4, 11, 4, 57, 488, DateTimeKind.Local).AddTicks(5796),
                            Status = "PLA",
                            Version = 0m
                        },
                        new
                        {
                            Id = 9m,
                            Customer = "Customer9",
                            GroupId = 1m,
                            Name = "Test9",
                            ProjectNumber = 9m,
                            StartDate = new DateTime(2022, 6, 4, 11, 4, 57, 488, DateTimeKind.Local).AddTicks(5798),
                            Status = "PLA",
                            Version = 0m
                        },
                        new
                        {
                            Id = 10m,
                            Customer = "Customer10",
                            GroupId = 1m,
                            Name = "Test10",
                            ProjectNumber = 10m,
                            StartDate = new DateTime(2022, 6, 4, 11, 4, 57, 488, DateTimeKind.Local).AddTicks(5802),
                            Status = "PLA",
                            Version = 0m
                        });
                });

            modelBuilder.Entity("PIMToolCodeBase.Domain.Entities.Project_Employee", b =>
                {
                    b.Property<decimal>("ProjectId")
                        .HasColumnType("decimal(19,0)")
                        .HasColumnName("PROJECT_ID");

                    b.Property<decimal>("EmployeeId")
                        .HasColumnType("decimal(19,0)")
                        .HasColumnName("EMPLOYEE_ID");

                    b.HasKey("ProjectId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PROJECT_EMPLOYEE");

                    b.HasData(
                        new
                        {
                            ProjectId = 1m,
                            EmployeeId = 1m
                        },
                        new
                        {
                            ProjectId = 1m,
                            EmployeeId = 2m
                        },
                        new
                        {
                            ProjectId = 2m,
                            EmployeeId = 2m
                        },
                        new
                        {
                            ProjectId = 3m,
                            EmployeeId = 2m
                        });
                });

            modelBuilder.Entity("PIMToolCodeBase.Domain.Entities.Group", b =>
                {
                    b.HasOne("PIMToolCodeBase.Domain.Entities.Employee", "GroupLeader")
                        .WithOne("GroupLed")
                        .HasForeignKey("PIMToolCodeBase.Domain.Entities.Group", "GroupLeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupLeader");
                });

            modelBuilder.Entity("PIMToolCodeBase.Domain.Entities.Project", b =>
                {
                    b.HasOne("PIMToolCodeBase.Domain.Entities.Group", "Group")
                        .WithMany("Projects")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("PIMToolCodeBase.Domain.Entities.Project_Employee", b =>
                {
                    b.HasOne("PIMToolCodeBase.Domain.Entities.Employee", "Employee")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PIMToolCodeBase.Domain.Entities.Project", "Project")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PIMToolCodeBase.Domain.Entities.Employee", b =>
                {
                    b.Navigation("GroupLed");

                    b.Navigation("ProjectEmployees");
                });

            modelBuilder.Entity("PIMToolCodeBase.Domain.Entities.Group", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("PIMToolCodeBase.Domain.Entities.Project", b =>
                {
                    b.Navigation("ProjectEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
